<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:data="clr-namespace:Backbone.Common.Model;assembly=Backbone.Common"
    xmlns:controls="clr-namespace:Backbone.Common.UI.Controls"
    xmlns:converter="clr-namespace:Backbone.Common.UI.Converters"
    xmlns:local="clr-namespace:Backbone.Common.UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Backbone.Common.UI;component/Themes/ModernStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="DefaultTemplate">
        <TextBlock Text="{Binding UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
    </DataTemplate>

    <DataTemplate x:Key="BackboneDoubleTemplate">
        <controls:BackboneDoubleControl BackboneDoubleViewModel="{Binding Path=.}" />
    </DataTemplate>

    <DataTemplate x:Key="BackboneBrowseFileTemplate">
        <controls:BackboneBrowseFileControl BackboneBrowseFileViewModel="{Binding Path=.}" />
    </DataTemplate>

    <DataTemplate x:Key="BackboneBrowseFolderTemplate">
        <controls:BackboneBrowseFolderControl BackboneBrowseFolderViewModel="{Binding Path=.}" />
    </DataTemplate>

    <DataTemplate x:Key="BackboneReadOnlyTemplate">
        <TextBlock Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
    </DataTemplate>

    <DataTemplate x:Key="BackboneStringTemplate">
        <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="Transparent" BorderThickness="0" VerticalAlignment="Center" Style="{StaticResource TextBoxStyle}" />
    </DataTemplate>

    <DataTemplate x:Key="BackboneBooleanTemplate">
        <CheckBox IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="Transparent" BorderThickness="0" VerticalAlignment="Center" Style="{StaticResource CheckBoxStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="BackboneButtonTemplate">
        <controls:BackboneButtonControl BackboneButtonViewModel="{Binding Path=.}" />
    </DataTemplate>

    <DataTemplate x:Key="BackboneEnumTemplate">
        <ComboBox Name="comboBox" ItemsSource="{Binding PropertyType, Converter={StaticResource enumToValueConverter}}" SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ComboBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF3399FF"/>
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
                    <Setter Property="IsDropDownOpen" Value="False"/>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="ComboBox.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard >
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)">
                                        <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Resources>
        </ComboBox>
    </DataTemplate>

    <local:BackbonePropertyTemplateSelector x:Key="BackboneTemplateSelector"
                                        BackboneReadOnlyTemplate="{StaticResource ResourceKey=BackboneReadOnlyTemplate}"
                                        BackboneStringTemplate="{StaticResource ResourceKey=BackboneStringTemplate}"
                                        BackboneBooleanTemplate="{StaticResource ResourceKey=BackboneBooleanTemplate}"
                                        BackboneEnumTemplate="{StaticResource ResourceKey=BackboneEnumTemplate}"
                                        BackboneDoubleTemplate="{StaticResource ResourceKey=BackboneDoubleTemplate}"
                                        BackboneBrowseFileTemplate="{StaticResource ResourceKey=BackboneBrowseFileTemplate}"
                                        BackboneBrowseFolderTemplate="{StaticResource ResourceKey=BackboneBrowseFolderTemplate}"
                                        BackboneButtonTemplate="{StaticResource ResourceKey=BackboneButtonTemplate}"/>

    <Style x:Key="groupStyle" TargetType="{x:Type GroupItem}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Expander Name="exp" IsExpanded="True">
                                <Expander.Header>
                                    <TextBlock FontWeight="Bold" Margin="10,0,10,0" Text="{Binding Name}"/>
                                </Expander.Header>
                                <Expander.Content>
                                    <ItemsPresenter/>
                                </Expander.Content>
                            </Expander>
                            <ItemsPresenter Name="presenter" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Name}" Value="">
                                <Setter TargetName="exp" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="presenter" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Name}" Value="Advanced">
                                <Setter TargetName="exp" Property="IsExpanded" Value="False"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="BackbonePropertyGridStyle" TargetType="{x:Type controls:BackbonePropertyGrid}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <!--<Setter Property="BackboneClass" Value="{Binding Item.Model}"/>-->
        <!--<Setter Property="EditorMode" Value="{Binding Item.IsLocked, Converter={StaticResource BooleanToEditModeConverter}}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BackbonePropertyGrid}">
                    <ListView Name="PART_ItemsPresenter"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Foreground="#FFFFFF"
                                FontSize="12"
                                FontWeight="Bold"
                                Grid.IsSharedSizeScope="True"
                                SnapsToDevicePixels="True"
                                SelectionMode="Single"
                                HorizontalContentAlignment="Stretch"
                                VirtualizingStackPanel.IsVirtualizing="False"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                KeyboardNavigation.TabNavigation="Continue">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FFFFFF"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                </Style.Resources>
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <!--<ListView.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource BackboneGroupStyle}" Panel="{StaticResource WrapPanelTemplate}" />
                        </ListView.GroupStyle>-->
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:BackboneLabeledControl Header="{Binding DisplayName}" 
                                                      Style="{StaticResource ClippedLabeledControlStyle}"
                                                      Width="550" Margin="0,0,20,0"
                                                      IsTabStop="False">
                                    <ContentControl Foreground="#FFFFFF" Content="{Binding}" ContentTemplate="{Binding Template}" VerticalAlignment="Center" MinHeight="31" MaxHeight="31" IsTabStop="False"/>
                                </controls:BackboneLabeledControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
